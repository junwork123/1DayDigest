name: App Deployment # 이 스크립트의 제목

# 어떤 행동을 할때마다 실행할지
on:
  # master, release/v*라는 이름의 브랜치에 push가 발생할 때마다
  # ex) release/v0.1, release/v2.1.5
  push:
    branches:
      - master
      - release/v*

  # feature, fix 브랜치에 pull_request가 발생할 때마다
  pull_request:
    branches:
      - feature-*
      - fix-*

# 실행할 작업을 순서대로 정의함
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    # 체크아웃
    - name: checkout
      uses: actions/checkout@v3

    # JDK 설치
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    # DB 설정 파일 생성
    # 중요 정보는 Github Secret에서 복사해온다.
    - name: make application-database.yaml
      run: |
        # create application-database.yaml
        cd ./src/main/resources

        # application-database.yaml 파일 생성
        touch ./application-database.yaml

        # GitHub-Actions 에서 설정한 값을 application-database.yaml 파일에 쓰기
        echo "${{ secrets.DATABASE }}" >> ./application-database.yaml
      shell: bash

    # gradle 빌드
    # maven 빌드 : mvn package
    - name: Build with Gradle
      run: ./gradlew bootJar


    # 웹 이미지 빌드 및 도커허브에 push
    - name: web docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/second-eyes-web .
        docker push ${{ secrets.DOCKER_REPO }}/second-eyes-web
